假设现在数据库是按照 hash 分片，有 4个数据库不够了，要增加一个，这时候怎么保证线上平滑升级不影响线上跑的业务，
应该有什么步骤有哪些细节要注意应用服务怎么知道这个数据库新增加的节点，
假设现在有一千多个应用实例，全部重启肯定不现实、腾挪也不时间来不及

在将数据库按照哈希分片进行扩容时，并保证线上平滑升级且不影响线上业务的运行，可以采取以下步骤和注意事项：

1. **添加新的数据库节点**：首先，添加新的数据库节点到分片集群中。确保该节点已正确配置并能够与现有分片节点进行通信。

2. **数据迁移策略**：选择合适的数据迁移策略将现有数据分布到新的数据库节点上。这可以包括使用在线数据迁移工具、增量数据同步或数据库复制等技术。确保数据迁移过程不会对线上业务产生明显的性能影响。

3. **更新分片路由规则**：在哈希分片的情况下，应用程序通常会使用一致性哈希算法来路由请求到正确的数据库节点。更新应用程序中的分片路由规则，以包含新添加的数据库节点。这样应用程序就能知道新增加的节点。

4. **部分应用实例重启**：考虑只重启一部分应用实例，以便更新分片路由规则并使其生效。将这些实例的连接配置更新为包含新节点的分片路由规则，并逐步重启这些实例。这样，只有一小部分应用实例会受到影响，其他实例仍可以继续运行。

5. **逐步扩大范围**：在更新了一部分应用实例之后，观察系统的运行情况和性能表现。如果一切正常，逐步扩大范围，重启更多的应用实例，使其更新分片路由规则并连接到新的数据库节点。

6. **监控和验证**：在整个扩容过程中，密切监控系统的性能和健康状态。确保新的数据库节点正常工作，并验证数据的一致性和完整性。

7. **回滚计划**：在扩容过程中，一定要有回滚计划。如果出现问题，能够迅速回退到原始的分片配置。确保备份数据的可用性，并制定恢复方案。

8. **自动化工具和脚本**：考虑使用自动化工具和脚本来简化和加速扩容过程。这可以包括自动化数据迁移、配置更新和应用重启等步骤，以减少人工干预和错误。

对于应用服务如何知道新增加的数据库节点，可以采取以下方法：

- **使用服务发现机制**：使用服务发现工具或服务注册表来注册和发现数据库节点。当新的数据库节点添加到集群中时，它会自动注册并在服务发现机制中可见。应用服务可以通过查询服务发现机制来获取有关新增节点的信息。

- **动态配置更新**：使用配置中心或动态配置管理工具，将数据库节点的信息存储在配置中心中。应用服务可以定期或按需从配置中心获取最新的数据库节点信息，并更新其连接配置。

- **非侵入式的节点通知**：一些数据库分片方案可能提供非侵入式的节点通知机制。这些机制可以通过订阅和监听事件来通知应用服务有关新增节点的信息。应用服务可以根据接收到的通知来更新连接配置。

综上所述，通过逐步更新分片路由规则、部分应用实例重启和使用自动化工具，可以实现数据库扩容并保证线上平滑升级。选择合适的方法和策略，根据具体情况进行调整和优化，以最小化对线上业务的影响。