"""

1，事务的特性：原子性、一致性、隔离性、持久性
原子性：一个事务中的所有操作要么全部成功，要么全部失败
一致性：事务执行前后，数据的完整性没有被破坏
隔离性：多个事务并发执行的时候，一个事务的执行不会被其他事务干扰
持久性：事务一旦提交，对数据库的改变就是永久性的


2，多个事务执行的时候会发生的问题：脏读、幻读、不可重复读
脏读：一个事务读取到另一个事务未提交的数据
幻读：一个事务读取到另一个事务提交的数据，但是另一个事务又插入了新的数据
不可重复读：一个事务读取到另一个事务提交的数据，但是另一个事务又更新了数据


3，事务的隔离级别有四种
答案：读未提交、读提交、可重复读、串行化
读未提交：一个事务的更改未提交，其他事务能看到更改
读提交：一个事务的更改提交后，其他事务才看到
可重复读：一个事务执行过程中看到的数据始终是一样的。另外为提交的更改对其他事务不可见
串行化：对一个事务的记录会加读写锁，有冲突的时候，下一个事务要等待前一个事务执行完后才可以执行


MVcc：多版本并发控制，是一种乐观锁的实现方式，通过在每行记录后面保存多个版本的数据来实现的。每个事务在读取数据的时候，只读取当前版本的数据，而不是读取最新的数据。这样就可以避免读取到未提交的数据。

MySQL 锁的分类：
1，表锁：锁住整张表，读锁和写锁
2，行锁：锁住一行或者多行，读锁和写锁
3，页锁：锁住一页，读锁和写锁
4，意向锁：锁住表的意向，读锁和写锁

MySQL 锁的类型：
1，共享锁（S锁）：读锁，允许其他事务读取该行，但是不允许其他事务修改该行
2，排他锁（X锁）：写锁，允许其他事务修改该行，但是不允许其他事务读取该行
3，意向共享锁（IS锁）：读锁的意向锁，允许其他事务给该行加读锁，但是不允许其他事务给该行加写锁
4，意向排他锁（IX锁）：写锁的意向锁，允许其他事务给该行加写锁，但是不允许其他事务给该行加读锁

MySQL 锁的粒度：
1，表锁：锁住整张表，读锁和写锁
2，行锁：锁住一行或者多行，读锁和写锁
3，页锁：锁住一页，读锁和写锁
4，意向锁：锁住表的意向，读锁和写锁


间隙锁：当一个事务对某个范围的数据进行加锁操作时，如果这个范围内没有数据，那么这个事务会对这个范围的前后两个数据加锁，这个锁就是间隙锁

MySQL 锁的算法：
1，记录锁：锁住一行或者多行，读锁和写锁
2，间隙锁：锁住一行或者多行，读锁和写锁
3，表锁：锁住整张表，读锁和写锁
4，意向锁：锁住表的意向，读锁和写锁

gap锁：当一个事务对某个范围的数据进行加锁操作时，如果这个范围内没有数据，那么这个事务会对这个范围的前后两个数据加锁，这个锁就是间隙锁

GIL：全局解释器锁，是Python的一个特性，它保证了同一时刻只有一个线程在执行Python字节码，这样就保证了线程安全。
    但是GIL会导致多线程的并发性能不高，因为同一时刻只有一个线程在执行Python字节码，其他线程都在等待GIL的释放。

gil的释放：
1，遇到IO操作的时候，会释放GIL
2，遇到耗时操作的时候，会释放GIL
3，遇到C扩展的时候，会释放GIL

gil的获取：
1，遇到IO操作的时候，会获取GIL
2，遇到耗时操作的时候，会获取GIL
3，遇到C扩展的时候，会获取GIL

gil 可以去掉吗？
1，可以通过C扩展去掉GIL
2，可以通过多进程去掉GIL


垃圾回收机制
1，引用计数：引用计数是Python的一个特性，它用来记录对象的引用次数，当对象的引用次数为0的时候，就会被垃圾回收机制回收
2，标记清除：标记清除是Python的一个特性，它用来标记垃圾对象，然后清除垃圾对象
3，分代回收：分代回收是Python的一个特性，它用来回收老一代的垃圾对象


Redis set 命令
1，set key value：设置指定key的值
2，set key value ex seconds：设置指定key的值，并且设置过期时间
3，set key value px milliseconds：设置指定key的值，并且设置过期时间
4，set key value nx：设置指定key的值，只有当key不存在的时候才设置
5，set key value xx：设置指定key的值，只有当key存在的时候才设置
6，set key value keepttl：设置指定key的值，保留原来的过期时间
7，set key value ex seconds nx：设置指定key的值，并且设置过期时间，只有当key不存在的时候才设置
8，set key value ex seconds xx：设置指定key的值，并且设置过期时间，只有当key存在的时候才设置
9，set key value px milliseconds nx：设置指定key的值，并且设置过期时间，只有当key不存在的时候才设置
10，set key value px milliseconds xx：设置指定key的值，并且设置过期时间，只有当key存在的时候才设置
11，set key value keepttl nx：设置指定key的值，保留原来的过期时间，只有当key不存在的时候才设置
12，set key value keepttl xx：设置指定key的值，保留原来的过期时间，只有当key存在的时候才设置

"""