"""
索引的作用：提高查询效率


索引模型：
    1. B+树索引
    2. 哈希索引
    3. 全文索引

B+树索引：
    1. B+树索引是一种多叉树，每个节点最多有M个子节点，M叫做B+树的阶，M的大小取决于磁盘页的大小。
    2. B+树索引的叶子节点是有序的，叶子节点之间通过指针相互连接。
    3. B+树索引的非叶子节点不存储数据，只存储索引值，非叶子节点的子节点指针和索引值是一一对应的。
    4. B+树索引的非叶子节点的子节点指针和索引值是一一对应的。


b+树索引的优点：
    1. 叶子节点之间通过指针相互连接，所以可以顺序读取数据，提高了数据的读取效率。
    2. 非叶子节点不存储数据，所以可以减少磁盘IO次数，提高了数据的读取效率。
    3. 非叶子节点的子节点指针和索引值是一一对应的，所以可以通过二分查找的方式查找数据，提高了数据的查找效率。
    4. 叶子节点是有序的，所以可以通过范围查找的方式查找数据，提高了数据的查找效率。
    5. B+树索引的非叶子节点的子节点指针和索引值是一一对应的，所以可以通过二分查找的方式查找数据，提高了数据的查找效率。

b+树索引的缺点：
    1. B+树索引的非叶子节点不存储数据，所以无法直接定位到数据，需要通过叶子节点来定位数据。
    2. B+树索引的叶子节点是有序的，所以无法通过二分查找的方式查找数据，只能顺序查找数据。

b树和b+树的区别：
    1. b树的非叶子节点存储数据，b+树的非叶子节点不存储数据。
    2. b树的叶子节点之间通过指针相互连接，b+树的叶子节点之间通过指针相互连接。


MySQL 有哪些索引
    1. 主键索引
    2. 唯一索引
    3. 普通索引
    4. 全文索引
    5. 组合索引
    6. 前缀索引
    7. 空间索引

主键索引：
    1. 主键索引是一种特殊的唯一索引，主键索引的列不能有空值。
    2. 主键索引的列不能有重复值。
    3. 主键索引的列不能有空值。

唯一索引：
    1. 唯一索引的列不能有空值。
    2. 唯一索引的列不能有重复值。

普通索引：
    1. 普通索引的列可以有空值。
    2. 普通索引的列可以有重复值。

全文索引：
    1. 全文索引的列必须是字符串类型。

组合索引：
    1. 组合索引是多个列组成的索引，组合索引的列可以是任意类型。
    2. 组合索引的列可以有空值。
    3. 组合索引的列可以有重复值。

前缀索引：
    1. 前缀索引是对索引列的前缀进行索引，前缀索引的列必须是字符串类型。
    2. 前缀索引的列可以有空值。
    3. 前缀索引的列可以有重复值。

空间索引：
    1. 空间索引是对空间数据类型的列进行索引，空间索引的列必须是空间数据类型。
    2. 空间索引的列可以有空值。
    3. 空间索引的列可以有重复值。

索引失效的情况：
    1. 使用了or连接的条件。
    2. 使用了not in、<>、!=、not like、not regexp等条件。
    3. 使用了is null、is not null、is true、is not true、is false、is not false等条件。
    4. 使用了not between、not exists等条件。
    5. 使用了order by、group by、distinct等语句。
    6. 使用了left join、right join、full join等连接查询。
    7. 使用了union、union all等语句。
    8. 使用了子查询。
    9. 使用了函数。
    10. 使用了like '%abc'这种以通配符开头的模糊查询。
    11. 使用了like 'abc%'这种以通配符结尾的模糊查询。
    12. 使用了like '%abc%'这种包含通配符的模糊查询。
    13. 使用了like 'abc'这种没有通配符的模糊查询。
    14. 使用了索引列进行计算。
    15. 使用了索引列进行函数运算。
    16. 使用了索引列进行类型转换。
    17. 使用了索引列进行自增或自减。
    18. 使用了索引列进行位运算。
    19. 使用了索引列进行三元运算。
    20. 使用了索引列进行case when then else end运算。

"""