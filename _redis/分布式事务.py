"""


    分布式事务：是指跨越多个进程的事务，其中包含了多个子事务，这些子事务可能位于不同的进程中。分布式事务的目的是保证多个进程的事务的原子性、
        一致性、隔离性和持久性，与单机事务类似

    分布式事务的实现需要考虑以下几个问题：
    1，事务管理：需要一个中心协调者来管理整个分布式事务，包括事物的开始、提交和回滚等操作
    2，事务边界：需要确定事务的边界，即哪些操作属于同一个事务，哪些操作属于不同的事务
    3，事务提交：需要保证所有子事务都执行成功才能提交整个分布式事务，否则需要回滚所有子事务
    4，蜀黍一致性：需要保证所有子事务的数据再提交后能够保持一致，即保证数据的一致性

    主流的分布式事务实现方式包括两阶段提交协议（2PC）、三阶段提交协议（3PC）、Paxos算法、Raft 算法等。其中，2PC 是最常用的分布式事务
    实现方式，其基本思想是在两个阶段中协调所有参与者节点的状态，以保证事务的原子性和一致性。而 3PC 在 2PC 的基础上增加了一个准备阶段，
    用于尽量避免分布式事务的长时间阻塞和故障恢复等问题

    分布式事务应用场景：
    1，电商平台订单支付：涉及多个数据源，包括订单系统、支付系统和库存系统等。
    2，金融交易：包括账户系统、支付系统和交易系统
    3，物流配送：订单系统、物流系统和库存系统
    4，大数据分析：数据采集系统、分析系统和存储系统

    分布式事务缺点：
    1，性能开销
    2，一致性问题：指网络延迟、节点故障导致
    3，可用性问题：中心协调者可能成为系统的单点故障
    4，复杂性问题：多节点之间的协调和通信
    5，限制问题：需要满足一致性、隔离性、原子性等

    两阶段提交协议（two-phase commit）：包括准备阶段和提交阶段
    1，准备阶段：事务协调者向所有参与者节点发送 Prepare 请求，并等待所有参与者节点的响应。如果所有节点都准备好提交事务，则协调者发送
     Commit 请求，否则发送 Abort 请求，撤销整个事务

    2，提交阶段：如果所有节点都成功提交了事务，则协调者向所有节点发送 Comfirm 请求，表示事务已经提交完成。如果单个节点在提交阶段发生故障，
     则协调者会发送 Rollback 请求，撤销整个事务

    三阶段提交协议（three-phase commit）：
    3PC 是对 2PC 协议的改进，引入了一个额外的阶段-- 超时预备阶段。在 3PC 协议中，协调者在准备阶段发送准备请求给所有参与者，要求参与者准备
    就绪。如果所有参与者都准备就绪，则进入超时预备阶段，协调者等待一段时间，等待参与者确认是否能够提交事务。在超时预备阶段结束后，进入提交
    阶段，协调者向所有参与者发送提交请求，要求参与者提交事务。如果有任何一个参与者未能准备就绪或提交失败，则整个事务回滚

    相比于 2PC，3PC 的主要有点是可以避免由于网络分区或参与者故障导致的"阻塞"情况。在 2PC 中，如果协调者在准备阶段发生故障，那么整个事务
    将被阻塞，直到协调者恢复或者超时。在 3PC 中，由于引入了超时预备阶段，即使协调者在准备阶段发生故障，也可以避免事务被阻塞，参与者可以在
    超时预备阶段结束后，自行判断是否提交事务

"""