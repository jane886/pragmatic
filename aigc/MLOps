MLOps 就是机器学习时代的 DevOps。
它的主要作用就是连接模型构建团队和业务，运维团队，建立起一个标准化的模型开发，部署与运维流程，
使得企业组织能更好的利用机器学习的能力来促进业务增长。


MLOps是机器学习运维的缩写，它是将传统的软件开发中的DevOps思想应用到机器学习领域，
旨在通过自动化、监控和跟踪来改进机器学习模型的生命周期管理。
MLOps的目标是实现机器学习模型的可重复性、可扩展性和安全性，同时提高模型的部署效率、稳定性和可维护性。
需要MLOps的原因主要有以下几点：
    提高生产效率：MLOps可以通过自动化流程和重复使用组件来减少手动操作，从而提高生产效率。

    管理复杂性：机器学习模型通常包含多个组件，包括数据预处理、特征选择、模型训练和模型部署等。
        MLOps可以帮助管理这些组件的复杂性，确保每个组件都能够正常工作。

    保证质量：MLOps可以通过监控和跟踪模型的性能指标来保证模型的质量，并及时发现和解决问题。

    加强安全性：MLOps可以帮助确保模型的安全性，包括数据隐私、模型解释性和防止恶意攻击等。

    改进协作：MLOps可以通过提供共享平台、自动化流程和透明度来改善团队之间的协作效率。


MLOps 和 DevOps 的异同
DevOps 发展到现在已经非常成熟了，有丰富的理论和多样化的实践方式，
DevOps 可以赋能软件开发的全生命周期，提供的端到端交付能力是主力企业数字化转型的关键。
现在已经进入了 DevOps 平台化时代。
与 DevOps 不同的是，MLOps 还包含构建/训练机器学习模型所需的额外数据和模型步骤（见下图）。
这意味着 MLOps 最终对工作流的每个组件都有一些细微差别。

MLOps 是一组特定于机器学习项目的工程实践，借鉴了软件工程中更广泛采用的 DevOps 原则。 
DevOps 为交付应用程序带来了一种快速、持续迭代的方法，而 MLOps 则借用了相同的原则将机器学习模型投入生产。 
在这两种情况下，结果都是更高的软件质量、更快的补丁和发布以及更高的客户满意度。

MLOps 和 DevOps 都是旨在简化和自动化软件应用程序开发和部署的方法。 
DevOps 专注于一般软件开发流程和 IT 运营，但 MLOps 专门针对机器学习应用程序的独特挑战和复杂性。
但这两种方法都旨在提高软件应用程序开发、部署和管理中的协作、自动化和效率。


MLOps工作流程
数据准备和特征工程 - 通过创建可重现、可编辑和可共享的数据集、表格和可视化，为机器学习生命周期迭代探索、共享和准备数据。
    迭代地转换、聚合和删除重复数据以创建改进的特征。 重要的是，利用特征存储，使特征在数据团队之间可见和共享。

模型训练和调优 - 使用流行的开源库来训练和提高模型性能。 作为一种更简单的替代方法，
    使用自动化机器学习工具（例如 AutoML）自动执行试运行并创建可审查和可部署的代码。

模型管理 - 跟踪模型沿袭、模型版本，并管理模型工件和整个生命周期的转换。 
    借助 MLflow 等开源 MLOps 平台，跨 ML 模型发现、共享和协作。

模型推理和服务 - 管理模型刷新频率、推理请求时间以及测试和 QA 中的类似生产细节。 
    使用 repos 和 orchestrators（借用 devops 原则）等 CI/CD 工具来自动化预生产管道。

模型部署和监控 - 自动化权限和集群创建以生产注册模型。 启用 REST API 模型端点。

自动模型重训练 - 收集模型监控的指标信息针对性对模型进行重新训练
