批处理是一种将多个数据样本一起传递给模型进行处理的技术。
相比于逐个处理单个样本，批处理允许在一次计算中同时处理多个样本。
这样可以更有效地利用计算资源，提高计算速度。


在 LLM 推断中，批处理的优势主要体现在以下几个方面：

    减少模型参数加载次数：在不使用批处理的情况下，每次处理一个输入序列都需要加载一次模型参数。
        而批处理可以在一次加载后多次使用这些参数，从而减少了加载的次数。

    提高内存带宽的利用率：GPU 的内存带宽是有限的资源，而加载模型参数通常会消耗大量的内存带宽。
        通过批处理，可以更有效地利用这些内存带宽，使其在计算过程中得到更充分的利用。
    提高计算资源的利用率：LLM 推断通常是内存 - IO 受限的，而不是计算受限的，
        意味着加载数据到 GPU 的计算核心比在计算核心上执行 LLM 计算花费的时间更多。
        通过批处理，可以更有效地利用计算资源，提高计算速度。
        批处理是一种将多个数据样本一起传递给模型进行处理的技术。
        相比于逐个处理单个样本，批处理允许在一次计算中同时处理多个样本。
        这样可以更有效地利用计算资源，提高计算速度。


传统的批处理方法被称为静态批处理，是因为在这种方法中，批处理的大小在推断完成之前保持不变。
与 LLM 推断的迭代性质相关的是，在 LLM 推断过程中，每个请求是逐步生成的。具体来说：

在静态批处理中，一次性加载了模型参数，并在整个推断过程中重复使用这些参数来处理多个输入序列。
这样做更有效地利用了芯片的内存带宽，提高了计算利用率、吞吐量，并降低了 LLM 推断的成本。

然而，LLM 推断是一个迭代的过程。对于每个请求，模型会逐步生成输出序列的各个部分，直到生成停止标记或达到最大序列长度为止。
这意味着每次模型前向传递时，都会获得一个额外的输出 token。

例如，如果我们以句子“加利福尼亚的首府是什么:”作为提示，它将需要进行十次前向传递才能得到完整的响应，即 ["S", "a", "c", "r", “a”, "m", "e", "n", "t", "o"]。

由于 LLM 推断是一个迭代生成的过程，静态批处理可能导致 GPU 在批处理中的不同序列的生成长度不同时被低效利用。
因为不同的序列可能会在批处理中的不同迭代步骤中完成生成，而静态批处理会等待所有序列完成生成后才开始处理新的序列。
这导致了在等待最后一个序列完成生成之前，GPU 可能会被低效利用的情况。


静态批处理之所以会导致 GPU 低效利用，主要是因为它难以有效地处理不同生成长度的序列，
这些序列可能在同一批次中同时存在。这导致了以下问题：

    等待最长序列完成：在静态批处理中，所有序列都必须等待批处理中生成时间最长的序列完成，然后才能进行下一批次的处理。
        这意味着一旦有一个生成时间较长的序列存在，其他生成时间较短的序列将被迫等待，导致 GPU 的计算资源无法充分利用。
        这会浪费 GPU 的计算能力，尤其是当一些序列的生成非常快时。

    难以释放资源和添加新请求：由于 LLM 推断是一个迭代过程，一些序列可能会在批次中的不同时间点完成生成。
        这使得难以及时释放已完成生成的序列所占用的资源，并添加新的请求到批次中。
        如果没有有效的机制来管理这些生成中和已完成的序列，将导致 GPU 资源的浪费和低效利用。

    Variance in Generation Output：在静态批处理中，如果不同序列的生成长度差异较大，那么某些序列可能会迅速完成，
        而其他序列则需要更长的时间。这种差异性会导致 GPU 的部分计算资源一直处于闲置状态，
        因为它们无法立即用于生成更多的序列。


连续批处理是一种相对于静态批处理更高效的方法，特别适用于 LLM 推断。它的工作原理如下：

    动态确定批次大小：与静态批处理不同，连续批处理采用了迭代级别的调度。
        它并不等待每个序列在批次中完成生成后再进行下一个序列的处理。
        相反，它在每个迭代中根据需要确定批次的大小。这意味着一旦某个序列在批次中完成生成，
        就可以立即将一个新的序列插入到相同位置。

    提高 GPU 利用率：连续批处理通过更灵活地利用 GPU 的计算资源来提高 GPU 的利用率。
        在静态批处理中，如果批次中的不同序列的生成长度不同，GPU 会被低效利用，
        因为它必须等待批次中的所有序列完成生成才能开始下一个批次。
        而在连续批处理中，一旦一个序列完成生成，就可以立即开始处理下一个序列，从而最大程度地减少了 GPU 的闲置时间。